name: 使用 Buildozer 构建 Android APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .  # 或你指定的路径

    steps:
      - name: 检出代码仓库
        uses: actions/checkout@v2

      - name: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          architecture: x64
          python-version: 3.8

      - name: 安装 Java 17（Gradle 构建需要）
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 设置 JAVA_HOME 环境变量
        run: echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV

      - name: 创建并激活虚拟环境
        run: |
          python3 -m venv venv
          source venv/bin/activate
          echo "当前 Python 版本为: $(python --version)"

      - name: 安装系统依赖和 Buildozer
        run: |
          sudo apt update
          sudo apt install -y git \
            zip \
            unzip \
            openjdk-17-jdk \
            python3-pip \
            autoconf \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses5-dev \
            libncursesw5-dev \
            libtinfo5 \
            cmake \
            libffi-dev \
            libssl-dev
          python3 -m pip install --upgrade \
            Cython==0.29.33 \
            buildozer

      - name: 安装项目依赖（如果存在 requirements.txt）
        run: |
          if [ -f requirements.txt ]; then
            python3 -m pip install -r requirements.txt
          fi

      - name: 缓存 Buildozer 和 Gradle 构建目录
        uses: actions/cache@v4
        with:
          path: |
            ~/.buildozer
            ~/.gradle
          key: ${{ runner.os }}-buildozer-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      - name: 使用 Buildozer 构建 APK
        run: |
          buildozer android debug
