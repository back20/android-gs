name: 构建 Android APK

on:
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-22.04  # 使用稳定 Ubuntu 版本
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 更新 APT 并安装依赖
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y zip unzip openjdk-17-jdk python3-pip git libffi-dev \
              libssl-dev libsqlite3-dev zlib1g-dev

      - name: 安装 Buildozer 和 Cython
        run: |
          python3 -m pip install --upgrade pip
          pip install cython==0.29.36 buildozer

      - name: 设置 ANDROID SDK 和 NDK 环境变量
        run: |
          mkdir -p $HOME/android-sdk
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/android-sdk/ndk" >> $GITHUB_ENV
          echo "PATH=$HOME/.buildozer/android/platform-tools:$PATH" >> $GITHUB_ENV

      - name: 安装 Android commandline tools
        run: |
          cd $HOME/android-sdk
          curl -O https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -o commandlinetools-linux-9477386_latest.zip
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/
          rm -rf cmdline-tools-linux-*.zip

      - name: 安装 Android SDK 组件
        run: |
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk --licenses
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk \
            "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"

      - name: 构建 APK
        run: |
          buildozer android debug

      - name: 上传 APK 产物
        uses: actions/upload-artifact@v4
        with:
          name: worktime-debug-apk
          path: bin/*.apk
