name: Build APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: '构建类型'
        required: true
        default: 'release'
        type: choice
        options:
          - debug
          - release

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 90  # 延长超时时间，避免依赖下载中断

    steps:
    - name: 步骤 1/13 - 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 步骤 2/13 - 安装系统依赖（关键：添加 autotools 和 libtool）
      run: |
        sudo apt-get update
        # 安装 autotools、libtool 等必要工具（解决 LT_SYS_SYMBOL_USCORE 宏缺失问题）
        sudo apt-get install -y automake libtool autoconf pkg-config
        # 安装其他可能需要的编译工具
        sudo apt-get install -y build-essential git zlib1g-dev

    - name: 步骤 3/13 - 设置 Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: 步骤 4/13 - 缓存依赖
      uses: actions/cache@v4
      with:
        path: |
          ~/.buildozer
          ~/.cache/pip
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-

    - name: 步骤 5/13 - 安装 Buildozer
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython

    - name: 步骤 6/13 - 设置 Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 步骤 7/13 - 安装 Android SDK
      uses: malinskiy/action-android/install-sdk@release/0.1.6

    - name: 步骤 8/13 - 安装必要的 Android 构建工具
      run: |
        /home/runner/android-sdk/cmdline-tools/latest/bin/sdkmanager "build-tools;33.0.2"
        /home/runner/android-sdk/cmdline-tools/latest/bin/sdkmanager "platforms;android-33"
        /home/runner/android-sdk/cmdline-tools/latest/bin/sdkmanager "ndk;25.2.9519653"
        yes | /home/runner/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: 步骤 9/13 - 创建符号链接匹配 Buildozer 路径
      run: |
        mkdir -p /home/runner/.buildozer/android/platform/
        ln -s /home/runner/android-sdk /home/runner/.buildozer/android/platform/android-sdk
        mkdir -p /home/runner/.buildozer/android/platform/android-sdk/tools/bin/
        ln -s /home/runner/android-sdk/cmdline-tools/latest/bin/sdkmanager /home/runner/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager

    - name: 步骤 10/13 - 配置 Buildozer.spec
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi
        
        sed -i 's/title = My Application/title = 工时价格Excel生成器/g' buildozer.spec
        sed -i 's/package.name = myapp/package.name = gzexcel/g' buildozer.spec
        sed -i 's/package.domain = org.test/package.domain = com.example/g' buildozer.spec
        sed -i 's/requirements = python3,kivy/requirements = python3,kivy,kivymd,pandas,openpyxl/g' buildozer.spec
        sed -i 's/source.main = main.py/source.main = gz.py/g' buildozer.spec
        echo "android.build_tools_version = 33.0.2" >> buildozer.spec
        
        if [ "${{ github.event.inputs.release_type }}" == "release" ]; then
          sed -i '/android.permissions =/c\android.permissions = INTERNET, WRITE_EXTERNAL_STORAGE, READ_EXTERNAL_STORAGE' buildozer.spec
          echo "android.keystore = True" >> buildozer.spec
          echo "android.keystore.password = \$ENV{KEYSTORE_PASSWORD}" >> buildozer.spec
          echo "android.keystore.alias = \$ENV{KEY_ALIAS}" >> buildozer.spec
          echo "android.keystore.alias.password = \$ENV{KEY_PASSWORD}" >> buildozer.spec
        fi

    - name: 步骤 11/13 - 设置环境变量
      run: |
        echo "ANDROID_HOME=/home/runner/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/home/runner/android-sdk" >> $GITHUB_ENV
        echo "PATH=$PATH:/home/runner/android-sdk/cmdline-tools/latest/bin:/home/runner/android-sdk/platform-tools" >> $GITHUB_ENV

    - name: 步骤 12/13 - 构建 APK
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        export GRADLE_OPTS="-Xmx4g -Xms1g"
        
        if [ "${{ github.event.inputs.release_type }}" == "release" ]; then
          echo "$KEYSTORE_BASE64" | base64 -d > release.keystore
          mkdir -p ~/.buildozer/android/platform/
          mv release.keystore ~/.buildozer/android/platform/
          buildozer -v android release
        else
          buildozer -v android debug
        fi

    - name: 步骤 13/13 - 上传 APK 产物
      uses: actions/upload-artifact@v4
      with:
        name: 工时价格Excel生成器_${{ github.sha }}
        path: bin/*-${{ github.event.inputs.release_type }}.apk
        retention-days: 30
