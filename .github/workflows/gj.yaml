name: 构建工时价格Excel生成器APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: '选择构建类型'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      # 核心环境变量配置
      ANDROID_HOME: /home/runner/android-sdk
      ANDROID_NDK_VERSION: 25.1.8937393
      PYTHON_VERSION: '3.9'
      ERROR_LOG: ./build_error.log
      # 应用基础信息（可根据实际情况修改）
      APP_TITLE: "工时价格Excel生成器"
      PACKAGE_NAME: "gzexcel"
      PACKAGE_DOMAIN: "com.example"
      MAIN_PY_FILE: "gz.py"  # 主程序入口文件

    steps:
    - name: 1. 检出代码
      uses: actions/checkout@v4

    - name: 2. 安装系统依赖
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          automake libtool autoconf pkg-config build-essential \
          libopenblas-dev liblapack-dev gfortran \
          libssl-dev libffi-dev
        # 记录已安装依赖
        dpkg -l | grep -E 'automake|libtool|autoconf|build-essential' > $ERROR_LOG 2>&1

    - name: 3. 设置Python环境
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 4. 清理历史缓存
      run: |
        rm -rf ~/.buildozer ~/.cache/pip .buildozer
      continue-on-error: true

    - name: 5. 安装Buildozer工具链
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade buildozer cython
        # 记录工具版本
        echo "===== 工具版本信息 =====" >> $ERROR_LOG
        pip list | grep -E 'buildozer|cython' >> $ERROR_LOG 2>&1
        buildozer --version >> $ERROR_LOG 2>&1

    - name: 6. 创建必要目录并授权
      run: |
        mkdir -p .buildozer/android/app ~/.buildozer/android/platform/
        chmod -R 777 .buildozer ~/.buildozer
        # 验证目录权限
        echo "===== 目录权限验证 =====" >> $ERROR_LOG
        ls -la .buildozer/android/ >> $ERROR_LOG 2>&1

    - name: 7. 配置Java环境
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 8. 安装Android SDK和NDK
      uses: malinskiy/action-android/install-sdk@release/0.1.6
      with:
        ndk: ${{ env.ANDROID_NDK_VERSION }}

    - name: 9. 安装Android构建工具
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          "build-tools;33.0.2" \
          "platforms;android-33" \
          "ndk;${{ env.ANDROID_NDK_VERSION }}"
        # 接受许可证
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: 10. 配置Buildozer路径映射
      run: |
        # 建立符号链接，确保Buildozer能找到SDK
        ln -s $ANDROID_HOME ~/.buildozer/android/platform/android-sdk
        ln -s $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
              ~/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager
        # 验证链接
        echo "===== SDK路径验证 =====" >> $ERROR_LOG
        ls -la ~/.buildozer/android/platform/android-sdk/tools/bin/ >> $ERROR_LOG 2>&1

    - name: 11. 生成并配置buildozer.spec
      run: |
        # 初始化配置文件（如果不存在）
        if [ ! -f buildozer.spec ]; then
          buildozer init
          echo "===== 初始化buildozer.spec =====" >> $ERROR_LOG
        fi
        
        # 核心配置（修复sed命令语法）
        sed -i -e "s/title = My Application/title = $APP_TITLE/" \
               -e "s/package.name = myapp/package.name = $PACKAGE_NAME/" \
               -e "s/package.domain = org.test/package.domain = $PACKAGE_DOMAIN/" \
               -e "s/source.main = main.py/source.main = $MAIN_PY_FILE/" \
               -e "s/version = 1.0/version = 1.0.0/" \
               buildozer.spec
        
        # 依赖和Android配置
        echo "requirements = python3,kivy==2.1.0,kivymd==0.104.2,pandas==1.5.3,openpyxl==3.1.2,numpy==1.24.3" >> buildozer.spec
        echo "android.build_tools_version = 33.0.2" >> buildozer.spec
        echo "android.ndk_version = $ANDROID_NDK_VERSION" >> buildozer.spec
        echo "android.archs = arm64-v8a,armeabi-v7a" >> buildozer.spec
        echo "source.dir = ." >> buildozer.spec
        
        # 发布版签名配置
        if [ "${{ github.event.inputs.release_type }}" == "release" ]; then
          sed -i '/android.permissions =/c\android.permissions = INTERNET, WRITE_EXTERNAL_STORAGE, READ_EXTERNAL_STORAGE' buildozer.spec
          echo "android.keystore = True" >> buildozer.spec
          echo "android.keystore.password = \$ENV{KEYSTORE_PASSWORD}" >> buildozer.spec
          echo "android.keystore.alias = \$ENV{KEY_ALIAS}" >> buildozer.spec
          echo "android.keystore.alias.password = \$ENV{KEY_PASSWORD}" >> buildozer.spec
        fi
        
        # 记录最终配置
        echo "===== 最终buildozer.spec配置 =====" >> $ERROR_LOG
        cat buildozer.spec >> $ERROR_LOG 2>&1

    - name: 12. 执行APK构建
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        touch $ERROR_LOG
        echo "===== 开始构建${{ github.event.inputs.release_type }}版本 =====" >> $ERROR_LOG
        
        # 处理发布版签名
        if [ "${{ github.event.inputs.release_type }}" == "release" ] && [ -n "$KEYSTORE_BASE64" ]; then
          echo "$KEYSTORE_BASE64" | base64 -d > release.keystore 2>> $ERROR_LOG
          mv release.keystore ~/.buildozer/android/platform/ 2>> $ERROR_LOG
        fi
        
        # 执行构建（命令格式：buildozer [全局参数] <目标> <命令> [参数]）
        buildozer --verbose android ${{ github.event.inputs.release_type }} --log_level=2 2>&1 | tee -a $ERROR_LOG || (
          echo "===== 构建失败 =====" >> $ERROR_LOG
          exit 1
        )

    - name: 13. 收集错误信息（构建失败时）
      if: failure()
      run: |
        echo "===== 环境变量 =====" >> $ERROR_LOG
        env >> $ERROR_LOG
        echo "===== 系统信息 =====" >> $ERROR_LOG
        uname -a >> $ERROR_LOG
        java -version 2>> $ERROR_LOG
        python --version >> $ERROR_LOG

    - name: 14. 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APP_TITLE }}_v1.0.0_${{ github.sha }}_${{ github.event.inputs.release_type }}
        path: |
          ${{ env.ERROR_LOG }}
          bin/*-${{ github.event.inputs.release_type }}.apk
          buildozer.spec
        retention-days: 30
