name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: '构建类型'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      ANDROID_HOME: /home/runner/android-sdk
      ANDROID_SDK_ROOT: /home/runner/android-sdk
      ANDROID_NDK_HOME: /home/runner/android-sdk/ndk/25.1.8937393
      GRADLE_OPTS: "-Xmx6g -Xms2g"
      PYTHON_VERSION: '3.9'
      ERROR_LOG_PATH: ./build_error.log  # 错误日志保存路径

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 安装系统依赖
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          automake libtool autoconf pkg-config build-essential \
          libopenblas-dev liblapack-dev gfortran \
          libssl-dev libffi-dev

    - name: 设置 Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 清理旧缓存
      run: |
        rm -rf ~/.buildozer ~/.cache/pip .buildozer
      continue-on-error: true

    - name: 安装 Buildozer
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade buildozer cython

    - name: 设置 Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 安装 Android SDK 和 NDK
      uses: malinskiy/action-android/install-sdk@release/0.1.6
      with:
        ndk: '25.1.8937393'

    - name: 安装 Android 构建工具
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;33.0.2"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-33"
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: 配置 Buildozer 路径
      run: |
        mkdir -p ~/.buildozer/android/platform/
        ln -s $ANDROID_HOME ~/.buildozer/android/platform/android-sdk
        mkdir -p ~/.buildozer/android/platform/android-sdk/tools/bin/
        ln -s $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager ~/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager

    - name: 配置项目规格
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi
        
        sed -i -e 's/title = My Application/title = 工时价格Excel生成器/' \
               -e 's/package.name = myapp/package.name = gzexcel/' \
               -e 's/package.domain = org.test/package.domain = com.example/' \
               -e 's/source.main = main.py/source.main = gz.py/' \
               buildozer.spec
        
        echo "requirements = python3,kivy==2.1.0,kivymd==0.104.2,pandas==1.5.3,openpyxl==3.1.2,numpy==1.24.3" >> buildozer.spec
        echo "android.build_tools_version = 33.0.2" >> buildozer.spec
        echo "android.ndk_version = 25.1.8937393" >> buildozer.spec

        if [ "${{ github.event.inputs.release_type }}" == "release" ]; then
          sed -i '/android.permissions =/c\android.permissions = INTERNET, WRITE_EXTERNAL_STORAGE, READ_EXTERNAL_STORAGE' buildozer.spec
          echo "android.keystore = True" >> buildozer.spec
          echo "android.keystore.password = \$ENV{KEYSTORE_PASSWORD}" >> buildozer.spec
          echo "android.keystore.alias = \$ENV{KEY_ALIAS}" >> buildozer.spec
          echo "android.keystore.alias.password = \$ENV{KEY_PASSWORD}" >> buildozer.spec
        fi

    - name: 构建 APK（修正命令格式）
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        # 创建错误日志文件
        touch ${{ env.ERROR_LOG_PATH }}
        
        # 准备签名密钥（发布版）
        if [ "${{ github.event.inputs.release_type }}" == "release" ]; then
          echo "$KEYSTORE_BASE64" | base64 -d > release.keystore 2>> ${{ env.ERROR_LOG_PATH }}
          mkdir -p ~/.buildozer/android/platform/ 2>> ${{ env.ERROR_LOG_PATH }}
          mv release.keystore ~/.buildozer/android/platform/ 2>> ${{ env.ERROR_LOG_PATH }}
        fi
        
        # 执行构建（修正命令格式：target command 参数顺序）
        buildozer android ${{ github.event.inputs.release_type }} -v --log_level=2 2>> ${{ env.ERROR_LOG_PATH }} || (
          echo "构建失败，错误信息已保存到 ${{ env.ERROR_LOG_PATH }}" >> ${{ env.ERROR_LOG_PATH }}
          exit 1
        )

    - name: 收集额外错误信息（构建失败时）
      if: failure()
      run: |
        # 收集环境变量和系统信息到日志
        echo "===== 环境变量 =====" >> ${{ env.ERROR_LOG_PATH }}
        env >> ${{ env.ERROR_LOG_PATH }}
        echo "===== 系统信息 =====" >> ${{ env.ERROR_LOG_PATH }}
        uname -a >> ${{ env.ERROR_LOG_PATH }}
        java -version 2>> ${{ env.ERROR_LOG_PATH }}
        python --version >> ${{ env.ERROR_LOG_PATH }}
        buildozer --version >> ${{ env.ERROR_LOG_PATH }}

    - name: 上传错误日志和产物
      uses: actions/upload-artifact@v4
      with:
        name: 构建产物与日志_${{ github.sha }}
        path: |
          ${{ env.ERROR_LOG_PATH }}
          bin/*-${{ github.event.inputs.release_type }}.apk
          buildozer.spec
        retention-days: 30
